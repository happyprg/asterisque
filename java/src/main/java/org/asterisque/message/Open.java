/*
 * Copyright (c) 2014 koiroha.org.
 * All sources and related resources are available under Apache License 2.0.
 * http://www.apache.org/licenses/LICENSE-2.0.html
*/
package org.asterisque.message;

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Open
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import org.asterisque.Debug;

/**
 * 特定のファンクションに対するパイプをオープンするためのメッセージです。
 *
 * @author Takami Torao
 */
public final class Open extends Message {

	// ==============================================================================================
	// ファンクション ID
	// ==============================================================================================
	/**
	 * ファンクションを識別する ID です。
	 */
	public final short functionId;

	// ==============================================================================================
	// ファンクション引数
	// ==============================================================================================
	/**
	 * ファンクションの呼び出し時に渡す引数です。
	 */
	public final Object[] params;

	// ==============================================================================================
	// プライオリティ
	// ==============================================================================================
	/**
	 * この Open によって開かれるパイプの同一セッション内でのプライオリティ。
	 */
	public final byte priority;

	// ==============================================================================================
	// コンストラクタ
	// ==============================================================================================
	/**
	 * Open メッセージを構築します。
	 */
	public Open(short pipeId, byte priority, short functionId, Object[] params){
		super(pipeId);
		if(params == null){
			throw new NullPointerException("params is null");
		}
		this.priority = priority;
		this.functionId = functionId;
		this.params = params;
	}

	// ==============================================================================================
	// インスタンスの文字列化
	// ==============================================================================================
	/**
	 * このインスタンスを文字列化します。
	 */
	@Override
	public String toString(){
		return "Open(" + pipeId + "," + functionId + "," + Debug.toString(params) + ")";
	}

}
